{"version":3,"sources":["Tab1.js","Tab2.js","Tab3.js","Home.js","header.js","Register.js","App.js","serviceWorker.js","index.js"],"names":["Tab1","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","React","Component","Tab2","Tab3","Home","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","handleChange","event","console","log","setState","Paper_default","Tabs_default","onChange","indicatorColor","textColor","centered","Tab_default","label","Tab1_Tab1","undefined","Tab2_Tab2","Tab3_Tab3","Header","auth","anchorEl","target","checked","handleMenu","currentTarget","handleClose","_this$state","open","Boolean","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","IconButton_default","aria-owns","aria-haspopup","onClick","AccountCircle_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","Register","props","formData","stateCountryMapping","onStateChange","bind","assertThisInitialized","handleSubmit","onFormElementChnage","changeDialogState","getStateCityMappig","_this2","fetch","method","headers","Accept","Content-Type","then","response","json","data","elementName","currentData","e","name","selectedState","_this3","preventDefault","body","JSON","stringify","handleClickOpen","statesFormElement","keys","map","element","citiesList","citiesFormElement","class","onSubmit","htmlFor","type","placeholder","required","selected","Dialog_default","TransitionComponent","Transition","keepMounted","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","Slide_default","assign","direction","App","BrowserRouter","Route","exact","path","component","render","Register_Register","isAuthed","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a4c304f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Tab1 extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>This is how Tab 1 content routes....</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport class Tab2 extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>This is how Tab 2 content routes....</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport class Tab3 extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>This is how Tab 3 content routes....</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport {Tab1} from './Tab1.js';\r\nimport {Tab2} from './Tab2.js';\r\nimport {Tab3} from './Tab3.js';\r\n\r\nexport const styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n};\r\n\r\nexport class Home extends React.Component{\r\n\r\n  state = {\r\n    value: 0,\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    console.log(value);\r\n    this.setState({ value });\r\n  };\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n          <Paper>\r\n            <Tabs\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab label=\"TAB 1\" />\r\n              <Tab label=\"TAB 2\" />\r\n              <Tab label=\"TAB 3\" />\r\n            </Tabs>\r\n          </Paper>\r\n            {this.state.value === 0 ? <Tab1 /> : undefined}\r\n            {this.state.value === 1 ? <Tab2 /> : undefined}\r\n            {this.state.value === 2 ? <Tab3 /> : undefined}\r\n          </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n// import Switch from '@material-ui/core/Switch';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nexport class Header extends React.Component{\r\n\r\n  state = {\r\n    auth: true,\r\n    anchorEl: null,\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    this.setState({ auth: event.target.checked });\r\n  };\r\n\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n\r\n    render(){\r\n\r\n      const { auth, anchorEl } = this.state;\r\n      const open = Boolean(anchorEl);\r\n\r\n      return(\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" className=\"\">\r\n              Party Store\r\n            </Typography>\r\n            {auth && (\r\n              <div>\r\n                <IconButton\r\n                  aria-owns={open ? 'menu-appbar' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={this.handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle /> &nbsp; Person Name\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={open}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <MenuItem onClick={this.handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={this.handleClose}>My account</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport class Register extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      formData:{state: \"Select State\"},\r\n      stateCountryMapping:{\r\n    },\r\n    open:false\r\n  };\r\n\r\n  this.onStateChange = this.onStateChange.bind(this);\r\n  this.handleSubmit = this.handleSubmit.bind(this);\r\n  this.handleChange = this.handleChange.bind(this);\r\n  this.handleClose = this.handleClose.bind(this);\r\n  this.onFormElementChnage = this.onFormElementChnage.bind(this);\r\n  this.changeDialogState = this.changeDialogState.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStateCityMappig();\r\n  }\r\n\r\n  getStateCityMappig(){\r\n    fetch('http://127.0.0.1:9090/geo-list', {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          stateCountryMapping: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  onFormElementChnage(elementName, value){\r\n    let currentData = this.state.formData;\r\n    currentData[elementName] = value;\r\n    this.setState({\r\n      formData: currentData\r\n    });\r\n  }\r\n\r\n  changeDialogState(value){\r\n    this.setState({\r\n      open: value\r\n    });\r\n  }\r\n\r\n  handleChange(e){\r\n    this.onFormElementChnage(e.target.name, e.target.value);\r\n  }\r\n\r\n  onStateChange(e){\r\n    const state = e.target.value;\r\n    this.setState(\r\n      {selectedState: state\r\n      });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.formData);\r\n\r\n    fetch('http://127.0.0.1:9090/register-user', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state.formData)\r\n    }).then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.response);\r\n        if(data.response === \"USER_ID_EXISTS\"){\r\n          this.handleClickOpen();\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.changeDialogState(true);\r\n  }\r\n\r\n  handleClose() {\r\n    this.changeDialogState(false);\r\n  }\r\n\r\n  render(){\r\n    const statesList = Object.keys(this.state.stateCountryMapping);\r\n    const statesFormElement = statesList.map(\r\n      element => {\r\n          return <option value={element}>{element}</option>\r\n      });\r\n\r\n      const citiesList =  this.state.stateCountryMapping[this.state.formData.state];\r\n      let citiesFormElement = [];\r\n      if(this.state.formData.state !== \"Select State\"){\r\n        citiesFormElement = citiesList.map(\r\n          element => {\r\n            return <option value={element}>{element}</option>;\r\n          });\r\n      }\r\n\r\n    return(\r\n      <div class=\"App\">\r\n        <div class=\"App-header\">\r\n        <h1>Sign Up Form</h1>\r\n        <form onSubmit={this.handleSubmit} method=\"post\">\r\n          <label htmlFor=\"firstName\">\r\n            Details\r\n            <br />\r\n            <input onChange={this.handleChange} id=\"firstname\" name=\"firstname\" type=\"text\" placeholder=\"First Name\" required />\r\n            <input onChange={this.handleChange} id=\"lastname\" name=\"lastname\" type=\"text\" placeholder=\"Last Name\" required />\r\n            <br />\r\n            <input onChange={this.handleChange} id=\"email\" name=\"email\" type=\"email\" placeholder=\"E-mail Address\" required />\r\n            <br />\r\n            <input onChange={this.handleChange} id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <label>\r\n            Address\r\n            <br />\r\n            <input onChange={this.handleChange} id=\"address1\" name=\"address1\" type=\"text\" placeholder=\"Address Line 1\" required />\r\n            <input onChange={this.handleChange} id=\"address2\" name=\"address2\" type=\"text\" placeholder=\"Address Line 2\" />\r\n            <br />\r\n            <select onChange={this.handleChange} id=\"state\" name=\"state\">\r\n              <option value=\"Select State\">Select State</option>\r\n              {statesFormElement}\r\n            </select>\r\n            <select onChange={this.handleChange} id=\"city\" name=\"city\">\r\n              <option value=\"Select City\" selected>Select City</option>\r\n              {citiesFormElement}\r\n            </select>\r\n            <input onChange={this.handleChange} id=\"zipcode\" name=\"zipcode\" type=\"number\" placeholder=\"Zip Code\" required />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <button>REGISTER</button>\r\n        </form>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"Email ID Exists\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              Please choose another email ID to register. Entered Email ID is already in use\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n        </Dialog>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n","import React, { Component } from 'react';\nimport {Home} from './Home.js';\nimport {Header} from './header.js';\nimport {Register} from './Register.js';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/register\" render={(props) => <Register {...props} isAuthed={true} />} />\n            <Route exact path=\"/about\" component={Header} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}